version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  postgres:
    image: postgres:13.0-alpine
    restart: always
    env_file:
      - .env_example
    volumes:
      - pg_data_todolist:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U nik -d todolist" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - backend_nw

  api:
    image: ${DOCKERHUB_USERNAME}/diplom1:latest
    restart: always
    env_file:
      - .env_example
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy


volumes:
  pg_data_todolist:

networks:
  backend_nw:
    driver: bridge